(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{365:function(t,e,l){"use strict";l.r(e);var n=l(4),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,l=t._self._c||e;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("ul",[l("li",[t._v("비트별 OR을 사용해 여러 상수를 하나의 집합으로 모을 수 있으며, 이렇게 만들어진 집합을 비트 필드라고 한다.")]),t._v(" "),l("li",[t._v("비트 필드를 사용하면 비트별 연산을 사용해 합집합과 교집합 같은 집한 연산을 효율적으로 수행할 수 있다.")]),t._v(" "),l("li",[t._v("하지만 해석하기가 단순한 정수에 비해 매우 까다롭고 모든 원소를 순회하기도 까다롭다.")]),t._v(" "),l("li",[t._v("java.util.EnumSet 클래스는 열거 타입 사웃의 값으로 구성된 집합을 효과적으로 표현해준다.")]),t._v(" "),l("li",[t._v("EnumSet의 내부는 비트 벡터로 구현되어 있고, Set 인터페이스를 완벽히 구현하기 때문에 어떤 Set 구현체와도 함께 사용할 수 있다.")])]),t._v(" "),l("h4",{attrs:{id:"핵심-정리"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#핵심-정리"}},[t._v("#")]),t._v(" 핵심 정리")]),t._v(" "),l("ul",[l("li",[l("strong",[t._v("열거할 수 있는 타입을 한데 모아 집합 형태로 사용한다고 해도 비트 필드를 사용할 이유는 없다.")])]),t._v(" "),l("li",[t._v("EnumSet 클래스가 비트 필드 수준의 명료함과 성능을 제공하고 열거타입의 장점까지 가지낟.")])])])}),[],!1,null,null,null);e.default=s.exports}}]);